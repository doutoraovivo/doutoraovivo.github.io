{
  "openapi": "3.0.0",
  "paths": {
    "/professional": {
      "post": {
        "operationId": "CreateController_create",
        "summary": "cria um objeto PROFESSIONAL",
        "description": "* PROFESSIONAL representa seu profissional no atendimento.\n* O ID de PROFESSIONAL pode ser informado, caso você integrador queira usar o mesmo ID que já usa em seus sistema, simplificando a integração\n* Se não informar o ID, você precisa guardar o ID gerado em formato UUID para usar em outras consultas ou na inclusão de um agendamento.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "$ref": "#/components/schemas/ProfessionalCreateRequestDto"
              },
              "examples": {
                "requiredOnly": {
                  "description": "Somente campos obrigatórios. Note que o campo ID segue a regra descrita acima.",
                  "summary": "Somente campos obrigatórios",
                  "value": {
                    "id": "123456",
                    "name": "Roberval Juvencio Lazaroti",
                    "birth_date": "1976-01-23",
                    "mail": "roberval@lazaroti.com.br",
                    "cpf": "94819089846",
                    "license_number": "12345",
                    "license_region": "SP",
                    "license_council": "CRM"
                  }
                },
                "full": {
                  "summary": "Todos os campos",
                  "description": "Exemplo com todos os campos possíveis",
                  "value": {
                    "id": "123456",
                    "name": "Roberval Juvencio Lazaroti",
                    "birth_date": "1976-01-23",
                    "mail": "roberval@lazaroti.com.br",
                    "cpf": "94819089846",
                    "license_number": "12345",
                    "license_region": "SP",
                    "license_council": "CRM",
                    "gender": "M",
                    "cell_phone": "11912345678",
                    "telephone": "1112345678",
                    "medical_specialty": [
                      "Cardiologia",
                      "Oncologia"
                    ],
                    "address": {
                      "state": "SP",
                      "city": 3505708,
                      "number": "238",
                      "neighborhood": "Dezoito do Forte",
                      "complement": "4o andar",
                      "street": "Avenida Copacabana",
                      "zip_code": "06472000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Professional successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessionalCreateResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Professional already exists"
          }
        },
        "tags": [
          "create"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/professional/{id}": {
      "get": {
        "operationId": "ReadController_get",
        "summary": "Pesquisa um objeto PROFESSIONAL",
        "description": "* PROFESSIONAL representa seu profissional (doutor) no em um atendimento.\n",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professional",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessionalReadResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Professional item not Found"
          }
        },
        "tags": [
          "read"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "operationId": "UpdateController_update",
        "summary": "Substitui os dados do PROFESSIONAL pelo que for enviado no corpo da requisição",
        "description": "\n      * PROFESSIONAL representa os dados de um profissional (doutor) cadastrado no sistema\n      * Se alguma propriedade não for enviada no corpo da requisição será deletada\n    ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "$ref": "#/components/schemas/ProfessionalUpdateRequestDto"
              },
              "examples": {
                "full": {
                  "summary": "Campos disponíveis para edição",
                  "description": "Exemplo com todos os campos possíveis",
                  "value": {
                    "id": "123456",
                    "name": "Roberval Juvencio Lazaroti",
                    "birth_date": "1976-01-23",
                    "mail": "roberval@lazaroti.com.br",
                    "cpf": "94819089846",
                    "license_number": "12345",
                    "license_region": "SP",
                    "license_council": "CRM",
                    "gender": "M",
                    "cell_phone": "11912345678",
                    "telephone": "1112345678",
                    "address": {
                      "state": "SP",
                      "city": 3505708,
                      "number": "238",
                      "neighborhood": "Dezoito do Forte",
                      "complement": "4o andar",
                      "street": "Avenida Copacabana",
                      "zip_code": "06472000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Professional successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessionalCreateResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Professional item not Found"
          }
        },
        "tags": [
          "update"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "DeleteController_delete",
        "summary": "Exclui um objeto PROFESSIONAL",
        "description": "\n* PROFESSIONAL representa seu profissional (doutor) em um atendimento.\n* O ID de PROFESSIONAL não pode ser reaproveitado. Sua exclusão é LOGICA, ou seja, o registro permanece por histórico das consultas já efetuadas.\n    ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professional successfully deleted."
          },
          "204": {
            "description": "Professional item not Found"
          }
        },
        "tags": [
          "delete"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Professional",
    "description": "Criação e manutenção de Profissionais (médicos/colaboradores/especialistas)",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.v2.doutoraovivo.com.br",
      "description": "ambiente de PRODUÇÃO"
    },
    {
      "url": "https://api.v2.hom.doutoraovivo.com.br",
      "description": "ambiente de HOMOLOGAÇÃO"
    }
  ],
  "components": {
    "schemas": {
      "AddressSchema": {
        "type": "object",
        "properties": {
          "zip_code": {
            "type": "string",
            "pattern": "^\\d{5}\\d{3}$",
            "description": "CEP (Codigo de Enderecamento Postal)",
            "example": "06010210"
          },
          "street": {
            "type": "string",
            "description": "Logradouro",
            "example": "Avenida Copacabana"
          },
          "number": {
            "type": "string",
            "description": "Número do recinto",
            "example": "238"
          },
          "complement": {
            "type": "string",
            "description": "Complemento do Endereço",
            "example": "4o andar"
          },
          "neighborhood": {
            "type": "string",
            "description": "Bairro",
            "example": "Dezoito do Forte"
          },
          "city": {
            "type": "number",
            "description": "Código do município do IBGE (https://www.ibge.gov.br/explica/codigos-dos-municipios.php)",
            "example": 3505708
          },
          "state": {
            "type": "string",
            "description": "Estado (UF)",
            "example": "SP",
            "enum": [
              "AC",
              "AL",
              "AP",
              "AM",
              "BA",
              "CE",
              "DF",
              "ES",
              "GO",
              "MA",
              "MT",
              "MS",
              "MG",
              "PR",
              "PB",
              "PA",
              "PE",
              "PI",
              "RN",
              "RS",
              "RJ",
              "RO",
              "RR",
              "SC",
              "SE",
              "SP",
              "TO"
            ]
          }
        },
        "required": [
          "zip_code",
          "street",
          "number",
          "neighborhood",
          "city",
          "state"
        ]
      },
      "ProfessionalCreateRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identificator"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "cpf": {
            "type": "string",
            "description": "CPF",
            "example": "94819089846",
            "pattern": "^\\d{3}\\d{3}\\d{3}\\d{2}$"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Birth Date"
          },
          "mail": {
            "type": "string",
            "format": "email",
            "example": "professional@example.dav.med.br"
          },
          "crm": {
            "type": "string",
            "description": "CRM",
            "example": "12345-SP"
          },
          "medical_specialty": {
            "description": "Medical specialties",
            "example": [
              "Cardiologista"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license_council": {
            "type": "string",
            "description": "Tipo de registro de conselho regional",
            "example": "CREF"
          },
          "license_number": {
            "type": "string",
            "description": "Numero do registro de conselho regional",
            "example": "12345",
            "maxLength": 20
          },
          "license_region": {
            "type": "string",
            "description": "Região do registro de conselho",
            "example": "SP"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "enum": [
              "F",
              "M"
            ]
          },
          "telephone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "1112345678",
            "pattern": "^\\d{2}\\d{4}\\d{4}$"
          },
          "cell_phone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "11912345678",
            "pattern": "^\\d{2}\\d{5}\\d{4}$"
          },
          "address": {
            "description": "Endereço",
            "additionalProperties": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressSchema"
              }
            ]
          }
        },
        "required": [
          "name",
          "cpf",
          "birth_date",
          "mail",
          "license_number"
        ]
      },
      "ProfessionalCreateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identificator"
          }
        }
      },
      "ProfessionalReadResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identificator"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "cpf": {
            "type": "string",
            "description": "CPF",
            "example": "94819089846",
            "pattern": "^\\d{3}\\d{3}\\d{3}\\d{2}$"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Birth Date"
          },
          "mail": {
            "type": "string",
            "format": "email",
            "example": "professional@example.dav.med.br"
          },
          "crm": {
            "type": "string",
            "description": "CRM",
            "example": "12345-SP"
          },
          "medical_specialty": {
            "description": "Medical specialties",
            "example": [
              "Cardiologista"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license_council": {
            "type": "string",
            "description": "Tipo de registro de conselho regional",
            "example": "CREF"
          },
          "license_number": {
            "type": "string",
            "description": "Numero do registro de conselho regional",
            "example": "12345",
            "maxLength": 20
          },
          "license_region": {
            "type": "string",
            "description": "Região do registro de conselho",
            "example": "SP"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "enum": [
              "F",
              "M"
            ]
          },
          "telephone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "1112345678",
            "pattern": "^\\d{2}\\d{4}\\d{4}$"
          },
          "cell_phone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "11912345678",
            "pattern": "^\\d{2}\\d{5}\\d{4}$"
          },
          "address": {
            "description": "Endereço",
            "additionalProperties": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressSchema"
              }
            ]
          }
        },
        "required": [
          "name",
          "cpf",
          "birth_date",
          "mail",
          "license_number"
        ]
      },
      "ProfessionalUpdateRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "cpf": {
            "type": "string",
            "description": "CPF",
            "example": "94819089846",
            "pattern": "^\\d{3}\\d{3}\\d{3}\\d{2}$"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Birth Date"
          },
          "mail": {
            "type": "string",
            "format": "email",
            "example": "professional@example.dav.med.br"
          },
          "medical_specialty": {
            "description": "Medical specialties",
            "example": [
              "Cardiologista"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license_council": {
            "type": "string",
            "description": "Tipo de registro de conselho regional",
            "example": "CREF"
          },
          "license_number": {
            "type": "string",
            "description": "Numero do registro de conselho regional",
            "example": "12345",
            "maxLength": 20
          },
          "license_region": {
            "type": "string",
            "description": "Região do registro de conselho",
            "example": "SP"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "enum": [
              "F",
              "M"
            ]
          },
          "telephone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "1112345678",
            "pattern": "^\\d{2}\\d{4}\\d{4}$"
          },
          "cell_phone": {
            "type": "string",
            "description": "Phone Number (if applicable)",
            "example": "11912345678",
            "pattern": "^\\d{2}\\d{5}\\d{4}$"
          },
          "address": {
            "description": "Endereço",
            "additionalProperties": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressSchema"
              }
            ]
          }
        },
        "required": [
          "name",
          "cpf",
          "birth_date",
          "mail",
          "license_number"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
